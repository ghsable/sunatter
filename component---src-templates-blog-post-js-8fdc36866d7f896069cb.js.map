{"version":3,"file":"component---src-templates-blog-post-js-8fdc36866d7f896069cb.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\n\nconst Bio = () => {\n return (\n    <div className=\"mybio\">\n      <p>\n        <a href=\"/sunainfo\">üò™</a>\n        üò¥\n        üò™\n        üò¥\n        üò™\n        ‚Ä¶\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        ¬© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ‚Üê {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ‚Üí\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Bio","React","className","href","_ref","location","title","children","isRootPath","pathname","header","Link","to","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","_ref2","data","markdownRemark","post","Seo","frontmatter","excerpt","previous","next","siteTitle","Layout","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}