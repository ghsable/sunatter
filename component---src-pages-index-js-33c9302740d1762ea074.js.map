{"version":3,"file":"component---src-pages-index-js-33c9302740d1762ea074.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\n\nconst Bio = () => {\n return (\n    <div className=\"mybio\">\n      <p>\n        <a href=\"/sunatter\">ðŸ˜ª</a>\n        <a href=\"/sunalog\">ðŸ˜´</a>\n        ðŸ˜ª\n        <a href=\"/searchmode\">ðŸ˜´</a>\n        ðŸ˜ª\n        <a href=\"https://zenn.dev/dativus\">ðŸ˜´</a>\n        <a href=\"https://scrapbox.io/suna-64354306\">ðŸ˜ª</a>\n        â€¦\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["Bio","React","className","href","_ref","location","title","children","isRootPath","pathname","header","Link","to","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","_data$site$siteMetada","data","siteTitle","posts","allMarkdownRemark","nodes","length","Layout","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head","Seo"],"sourceRoot":""}