<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[suna❜s information.]]></description><link>https://ghsable.github.io/sunatter</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 13 Mar 2024 03:02:09 GMT</lastBuildDate><item><title><![CDATA[20240223]]></title><description><![CDATA[…]]></description><link>https://ghsable.github.io/sunatter/20240223/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20240223/</guid><pubDate>Fri, 23 Feb 2024 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;こんにちは。自宅のネットワーク環境の整備に成功したので記録しておこうと思います。&lt;/p&gt;
&lt;p&gt;コンピュータ周辺で手を加えられるところが無くなってきたためネットワーク環境の方に手を伸ばしてみた次第です。困っている領域では無い（既に通信できている）ため後回しになっていました。&lt;/p&gt;
&lt;p&gt;当初の目的は満たせたので「成功」と言って問題無いかなと振り返っています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通信を安定させる。（謎に途中で途切れないこと。）&lt;/li&gt;
&lt;li&gt;（あわよくば）通信速度を向上させる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;オンラインでの打合せやリモート接続などが特に不安定でしたが、明らかに安定するようになりました。実施された内容は以下の通りです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;屋外LAN配線&lt;/li&gt;
&lt;li&gt;ONU交換&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「屋外LAN配線」は有線LAN接続に向けた話です。ONUから有線LAN接続するために壁に穴を空けて屋外を経由して配線する工事になります。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;✍余談 其の壱
LANケーブル1本で対処しようとすると壁の穴とLANケーブルの間から隙間風が入ってくる可能性があります。費用がかさみますが「LANジャック（埋込型）の取付け」は全箇所で施工しておいた方が良いです。
「接続先との間に3本のLANケーブルがあるより1本の方が通信品質が上がるのでは？」という印象がありましたが実測では変わりませんでした。屋外のLANケーブルのカテゴリ（例: 5e）に屋内も合わせておけば問題無さそうです。
よって「LANジャック（埋込型）の取付け」のデメリットは費用面以外にはあまり無さそうです。ちなみに後から「LANジャック（埋込型）の取付け」だけの追加工事もできますが作業員派遣費用が再度掛かるので最初の施工に含めておいた方がお得です。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;✍余談 其の弐
「屋外LAN配線」の施工後に全ポートで「接続の確認」および「通信速度の確認」をしておいた方が良いです。接触不良などで不良ポートが見つかる場合があります。
私はこれらを怠ったばかりに再訪（業者側の不履行なので作業員派遣費用は免除）していただくことになりました。「接続はできているが通信速度が著しく遅い」は見落とされがちなので面倒でも全ポートで確認しておいた方が良いです。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3本（&lt;code class=&quot;language-text&quot;&gt;a1&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;a2&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;a3&lt;/code&gt;）配線していただき、それぞれで計測してみました。「&lt;code class=&quot;language-text&quot;&gt;a1&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;a2&lt;/code&gt;」と「&lt;code class=&quot;language-text&quot;&gt;a3&lt;/code&gt;」の屋外LANケーブルの種類は異なりますが（カテゴリは同じ）どれも「誤差の範囲」な結果となりました。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;LAN&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;ダウンロード（Mbps）&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;アップロード（Mbps）&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;レイテンシ: アンロード済み（ms）&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;レイテンシ: ロード済み（ms）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;a1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1000&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;270&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;9&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;a2&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1200&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;270&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;9&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;a3&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;990&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;310&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;9&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;27&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;計測には以下のサービスを利用しました。（約5回計測した平均値を載せています。）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fast.com/&quot;&gt;Fast.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;レイテンシについては以下の解説が参考になります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://about.netflix.com/ja/news/fast-com-now-measures-latency-and-upload-speed&quot;&gt;FAST.comでレイテンシとアップロード速度の計測が可能に&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;続いて「ONU交換」は無線LAN接続に向けた話です。正当な理由があれば上位版に交換対応（無償）していただけるようで以下の恩恵を受けることができます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同時接続台数の上限値が上がる。（例: 10台 → 32台）&lt;/li&gt;
&lt;li&gt;Wi-Fi規格が上がる。（例: Wi-Fi 5 → Wi-Fi 6）&lt;/li&gt;
&lt;li&gt;新しい暗号化タイプを使用できる。（例: WPA2-PSK(AES)/&lt;strong&gt;WPA3-SAE(AES)&lt;/strong&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新旧で比較してみるとそこそこの改善が見られました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;周波数帯&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;ダウンロード（Mbps）&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;アップロード（Mbps）&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;レイテンシ: アンロード済み（ms）&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;レイテンシ: ロード済み（ms）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;2.4GHz&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;112&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;112&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;13&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;117&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;5GHz&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;314&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;364&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;13&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;78&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;旧&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;周波数帯&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;ダウンロード（Mbps）&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;アップロード（Mbps）&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;レイテンシ: アンロード済み（ms）&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;レイテンシ: ロード済み（ms）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;2.4GHz&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;66&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;103&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;12&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;5GHz&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;136&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;91&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;11&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;91&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;これで以上になります。ネットワーク環境（有線LAN接続・無線LAN接続）の整備（改善）は「成功」と言って良さそうです。&lt;/p&gt;
&lt;p&gt;サービスデスクの方・作業員の方、ご対応いただきありがとうございました。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[20231209]]></title><description><![CDATA[こんにちは。話題の脱出ゲーム「The Exit 8」をプレイしてみました。 ルールは単純で「異変が無ければ道を進む」「異変が有れば道を戻る」です。連続で正答していけばタイトルの通り「8番出口」から脱出できるというものです。 Unreal Engine…]]></description><link>https://ghsable.github.io/sunatter/20231209/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20231209/</guid><pubDate>Sat, 09 Dec 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;こんにちは。話題の脱出ゲーム「&lt;a href=&quot;https://store.steampowered.com/app/2653790/The_Exit_8/&quot;&gt;The Exit 8&lt;/a&gt;」をプレイしてみました。&lt;/p&gt;
&lt;p&gt;ルールは単純で「異変が無ければ道を進む」「異変が有れば道を戻る」です。連続で正答していけばタイトルの通り「&lt;a href=&quot;https://store.steampowered.com/app/2653790/_/?l=japanese&quot;&gt;8番出口&lt;/a&gt;」から脱出できるというものです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.unrealengine.com/ja/unreal-engine-5&quot;&gt;Unreal Engine 5&lt;/a&gt; の威力でしょうか、現実世界と見間違えてしまいそうです。光の反射（レイトレーシング）や床の汚れなど、高精細で驚きます。&lt;/p&gt;
&lt;p&gt;依然として「&lt;a href=&quot;https://www.nvidia.com/&quot;&gt;NVIDIA&lt;/a&gt; &lt;a href=&quot;https://www.nvidia.com/ja-jp/geforce/&quot;&gt;GeForce&lt;/a&gt; &lt;a href=&quot;https://www.nvidia.com/ja-jp/geforce/rtx/&quot;&gt;RTX&lt;/a&gt; 2080 Ti Founders Edition」（&lt;a href=&quot;https://www.nvidia.com/ja-jp/geforce/20-series/&quot;&gt;20シリーズ&lt;/a&gt;）のままですが「解像度: 3840✕2160, プリセット: 最高」にしても問題は無さそうでした。今や &lt;a href=&quot;https://www.nvidia.com/ja-jp/geforce/graphics-cards/40-series/&quot;&gt;40シリーズ&lt;/a&gt; で取り残された感じですが、まだまだ戦えそうです。&lt;/p&gt;
&lt;p&gt;初見で変にはまらなければ30分程でクリア（1周）できるボリュームで、値段（470円）の割にイイ気分転換になりました。&lt;/p&gt;
&lt;p&gt;追記: 最高解像度でアップロードされている方が見当たらなかったので、私の方で書き出してみました。4K再生でどうぞお愉しみください。（※一部の異変がネタバレになります。）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=rOrb7tpidk4&quot;&gt;失敗ルート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PJxaLbSt0tA&quot;&gt;成功ルート&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[20231126]]></title><description><![CDATA[はじめに こんにちは。技術書を眺めていると先に概念の説明がありますよね。 なんとなく実際の動作（詳細）を先にもってきてみました。という思いつきです。 このネタには Rust…]]></description><link>https://ghsable.github.io/sunatter/20231126/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20231126/</guid><pubDate>Sun, 26 Nov 2023 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;はじめに&lt;/h1&gt;
&lt;p&gt;こんにちは。技術書を眺めていると先に概念の説明がありますよね。&lt;/p&gt;
&lt;p&gt;なんとなく実際の動作（詳細）を先にもってきてみました。という思いつきです。&lt;/p&gt;
&lt;p&gt;このネタには &lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt; が丁度良さそうなので題材にしてみようと思います。&lt;/p&gt;
&lt;p&gt;題して「出力結果&lt;strong&gt;だけ&lt;/strong&gt;から言えそうなことを並べてみる」です。内容は「&lt;a href=&quot;#%E5%8F%82%E7%85%A7%E5%85%88%E3%81%AE%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B&quot;&gt;参照先のアドレスを確認してみる&lt;/a&gt;」とします。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;⚠️
- 基本的な内容だけを取り扱います。
- あくまで出力結果だけから言えそうなことを並べる試みです。
- 本筋から逸れる内容はラベル「脱線」を付与します。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;参照先のアドレスを確認してみる&lt;/h1&gt;
&lt;h2&gt;複数回実行してみる&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;{:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1回目: 0x7ffd06da7efc
2回目: 0x7ffe55b8093c
3回目: 0x7fff544f9ddc
4回目: 0x7ffd67085b9c
...
N回目: 0x7ff........c&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;アドレスは16進数（&lt;code class=&quot;language-text&quot;&gt;0x...&lt;/code&gt;）で出力される。&lt;/li&gt;
&lt;li&gt;実行ごとにアドレスが変化している。
&lt;ul&gt;
&lt;li&gt;アドレスは実行時に決まる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;アドレスの前半（&lt;code class=&quot;language-text&quot;&gt;7ff&lt;/code&gt;）と末尾（例: &lt;code class=&quot;language-text&quot;&gt;c&lt;/code&gt;）は常に同じ。
&lt;ul&gt;
&lt;li&gt;脱線: 変数（&lt;code class=&quot;language-text&quot;&gt;x&lt;/code&gt;）の型を変更すると末尾が変化する。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ブロック（&lt;code class=&quot;language-text&quot;&gt;{}&lt;/code&gt;）で囲ってみる&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;1: {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2: {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1回目:
  1: 0x7ffc98e4d1b4
  2: 0x7ffc98e4d1b0
2回目:
  1: 0x7ffc358c56b4
  2: 0x7ffc358c56b0
3回目:
  1: 0x7ffc78ce2604
  2: 0x7ffc78ce2600
4回目:
  1: 0x7ffffd718bd4
  2: 0x7ffffd718bd0
...
N回目:
  1: 0x7ff........4
  2: 0x7ff........0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;アドレスの前半（&lt;code class=&quot;language-text&quot;&gt;7ff&lt;/code&gt;）と末尾（例: &lt;code class=&quot;language-text&quot;&gt;4&lt;/code&gt;,&lt;code class=&quot;language-text&quot;&gt;0&lt;/code&gt;）は常に同じ。
&lt;ul&gt;
&lt;li&gt;脱線: 変数（&lt;code class=&quot;language-text&quot;&gt;x&lt;/code&gt;）の型を変更すると末尾の組み合わせが変化する。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;シャドーイングしてみる&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;1: {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2: {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1回目:
  1: 0x7ffd7f543f3c
  2: 0x7ffd7f543f8c
2回目:
  1: 0x7fff4c8433bc
  2: 0x7fff4c84340c
3回目:
  1: 0x7ffd5a10b2ec
  2: 0x7ffd5a10b33c
4回目:
  1: 0x7ffe153097bc
  2: 0x7ffe1530980c
...
N回目:
  1: 0x7ff........c
  2: 0x7ff........c&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;変数を宣言（&lt;code class=&quot;language-text&quot;&gt;let&lt;/code&gt;）することで新たな領域（アドレス）が確保される。&lt;/li&gt;
&lt;li&gt;アドレスの前半（&lt;code class=&quot;language-text&quot;&gt;7ff&lt;/code&gt;）と末尾（例: &lt;code class=&quot;language-text&quot;&gt;c&lt;/code&gt;）は常に同じ。
&lt;ul&gt;
&lt;li&gt;脱線: 変数（&lt;code class=&quot;language-text&quot;&gt;x&lt;/code&gt;）の型を変更すると末尾が変化する。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;脱線: ミュータブルな変数に再代入してもアドレスは変化しない&lt;/h3&gt;
&lt;p&gt;変数を宣言（&lt;code class=&quot;language-text&quot;&gt;let&lt;/code&gt;）していないので同じアドレスになります。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;mut&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;1: {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2: {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1回目:
  1: 0x7ffefa40fe74
  2: 0x7ffefa40fe74
2回目:
  1: 0x7ffc1722a334
  2: 0x7ffc1722a334&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;脱線: シャドーイング後に1番目の変数（アドレス）を参照する&lt;/h3&gt;
&lt;p&gt;不変参照によって実現できそうです。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x_pointer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// 不変参照&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;1: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// 1番目のxを参照する&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;3: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x_pointer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x_pointer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// x_pointer自体のアドレス&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;4: {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x_pointer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// 1番目のxの値を計算に使用&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;5: {}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; x_pointer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1: 1, 0x7fffe12419c4
2: 2, 0x7fffe1241a2c
3: 1, 0x7fffe12419c4
4: 0x7fffe12419c8
5: 3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;参考: &lt;a href=&quot;https://doc.rust-jp.rs/book-ja/ch04-02-references-and-borrowing.html&quot;&gt;4.2. 参照と借用&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;複数の不変参照をすることは可能です。 データを読み込んでいるだけの人に、他人がデータを読み込むことに対して影響を与える能力はないからです。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なんだか（信頼性を隠れ蓑に）難解なコードを生み出せそうな気がしてきます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x_pointer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y_pointer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;1: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;3: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x_pointer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x_pointer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;4: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y_pointer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y_pointer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; z &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;5: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;6: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;7: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; z&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;z&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; answer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; z &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;y &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; x_pointer &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; y_pointer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;8: {}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; answer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1: 1, 0x7ffecdc4d618
2: 2, 0x7ffecdc4d61c
3: 2, 0x7ffecdc4d61c
4: 1, 0x7ffecdc4d618
5: 2, 0x7ffecdc4d61c
6: 2, 0x7ffecdc4d61c
7: 7, 0x7ffecdc4d794
8: 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;関数を呼んでみる&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;1: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token function&quot;&gt;no_return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;no_return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;-&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;3: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;4: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1回目:
  1: 1, 0x7ffc47b6b1c4
  2: Hello, 0x7ffc47b6b1c8
  3: 1, 0x7ffc47b6b014
  4: Hello, 0x7ffc47b6b290
2回目:
  1: 1, 0x7ffcc62bdd44
  2: Hello, 0x7ffcc62bdd48
  3: 1, 0x7ffcc62bdb94
  4: Hello, 0x7ffcc62bde10
3回目:
  1: 1, 0x7fff7a97dab4
  2: Hello, 0x7fff7a97dab8
  3: 1, 0x7fff7a97d904
  4: Hello, 0x7fff7a97db80
4回目:
  1: 1, 0x7ffedee6c3b4
  2: Hello, 0x7ffedee6c3b8
  3: 1, 0x7ffedee6c204
  4: Hello, 0x7ffedee6c480
...
N回目:
  1: 1, 0x7ff........4
  2: Hello, 0x7ff........8
  3: 1, 0x7ff........4
  4: Hello, 0x7ff........0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;rust&quot;&gt;&lt;pre class=&quot;language-rust&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;1: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;2: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token function&quot;&gt;no_return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;no_return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;-&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;3: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token macro property&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;4: {}, {:p}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1回目:
  1: 1, 0x7ffd3248d8ac
  2: Hello, 0x7ffd3248d8b0
  3: 1, 0x7ffd3248d8ac
  4: Hello, 0x7ffd3248d8b0
2回目:
  1: 1, 0x7fff8ca4a57c
  2: Hello, 0x7fff8ca4a580
  3: 1, 0x7fff8ca4a57c
  4: Hello, 0x7fff8ca4a580&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;・・・おっと、&lt;/h1&gt;
&lt;p&gt;きりがないですね。いくらでも「脱線」できそうなので、ここまでにしておきます。&lt;/p&gt;
&lt;p&gt;本記事が目的としていた試みはとりあえず満たせたかと思います。それでは。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[20231119]]></title><description><![CDATA[「イマドキ」は Visual Studio Code で GitHub Copilot を動かすのだそうです。（本当？）Vim に引き篭もるばかりでは健康にも悪そうです。 というわけでちょっと外の空気でも・・むむ、大きな壁が。導入の段階において Windows や macOS…]]></description><link>https://ghsable.github.io/sunatter/20231119/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20231119/</guid><pubDate>Sun, 19 Nov 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;「イマドキ」は &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; で &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&quot;&gt;GitHub Copilot&lt;/a&gt; を動かすのだそうです。（本当？）&lt;a href=&quot;https://www.vim.org/&quot;&gt;Vim&lt;/a&gt; に引き篭もるばかりでは健康にも悪そうです。&lt;/p&gt;
&lt;p&gt;というわけでちょっと外の空気でも・・むむ、大きな壁が。導入の段階において &lt;a href=&quot;https://www.microsoft.com/en-us/windows&quot;&gt;Windows&lt;/a&gt; や &lt;a href=&quot;https://www.apple.com/jp/macos/&quot;&gt;macOS&lt;/a&gt; であればスムーズに構築できるのですが、悲しいかな &lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; だとそうもいきません。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; 以外のユーザから見たら「なんでこんなに長いのｗ」と笑っていただけるような内容になったかもしれません。（基本的に私に向けた記録です。）&lt;/p&gt;
&lt;p&gt;さて本当かどうか、さっそく &lt;a href=&quot;https://github.com/microsoft/vscode&quot;&gt;Visual Studio Code&lt;/a&gt;（以下OSS版）を入れてみましょう。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ nix-shell &lt;span class=&quot;token parameter variable&quot;&gt;-p&lt;/span&gt; vscode
error:
       … &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; calling the &lt;span class=&quot;token string&quot;&gt;&apos;derivationStrict&apos;&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;builtin&lt;/span&gt;

         at /builtin/derivation.nix:9:12: &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;source not available&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

       …

       a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; To temporarily allow unfree packages, you can use an environment variable
          &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; a single invocation of the nix tools.

            $ &lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;NIXPKGS_ALLOW_UNFREE&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;

        Note: For &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;nix shell&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;nix build&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;nix develop&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt; or any other Nix &lt;span class=&quot;token number&quot;&gt;2.4&lt;/span&gt;+
        &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Flake&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; command, &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token parameter variable&quot;&gt;--impure&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt; must be passed &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; order to &lt;span class=&quot;token builtin class-name&quot;&gt;read&lt;/span&gt; this
        environment variable.

       b&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; For &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;nixos-rebuild&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt; you can &lt;span class=&quot;token builtin class-name&quot;&gt;set&lt;/span&gt;
         &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; nixpkgs.config.allowUnfree &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; configuration.nix to override this.

       Alternatively you can configure a predicate to allow specific packages:
         &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; nixpkgs.config.allowUnfreePredicate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pkg: builtins.elem &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lib.getName pkg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
             &lt;span class=&quot;token string&quot;&gt;&quot;vscode&quot;&lt;/span&gt;
           &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

       c&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; For &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;nix-env&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;nix-build&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;nix-shell&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt; or any other Nix &lt;span class=&quot;token builtin class-name&quot;&gt;command&lt;/span&gt; you can &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;
         &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; allowUnfree &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
       to ~/.config/nixpkgs/config.nix.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;いきなり面を食らったかと思います。&lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; には「Unfreeなパッケージは事前の許可が必要」という仕組みが存在するためです。&lt;/p&gt;
&lt;p&gt;とりあえず「&lt;code class=&quot;language-text&quot;&gt;NIXPKGS_ALLOW_UNFREE&lt;/code&gt;」を利用してみます。&lt;code class=&quot;language-text&quot;&gt;shell.nix&lt;/code&gt;を用意しておけば以下で成立すると思います。（&lt;code class=&quot;language-text&quot;&gt;shellHook&lt;/code&gt;に&lt;code class=&quot;language-text&quot;&gt;code&lt;/code&gt;を入れておくと起動の手間を省けます。）&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token assign-left variable&quot;&gt;NIXPKGS_ALLOW_UNFREE&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; nix-shell&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;code&lt;/code&gt;で起動できたと思います。さてここでユーザ空間に正式に導入するか考えてみます。&lt;/p&gt;
&lt;p&gt;ユーザ空間に導入するメリットを列挙してみます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nixos.org/manual/nix/stable/command-ref/nix-shell&quot;&gt;nix-shell&lt;/a&gt; を起動する必要が無い。&lt;/li&gt;
&lt;li&gt;事前に「&lt;code class=&quot;language-text&quot;&gt;NIXPKGS_ALLOW_UNFREE&lt;/code&gt;」を考慮しなくて良い。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Extensions&lt;/code&gt;をNix側で管理できる。（有効なパッケージが存在する場合に限る。）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;書いた手前、最後はあまりオススメできません。理由は以下の通りです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;欲しい&lt;code class=&quot;language-text&quot;&gt;Extension&lt;/code&gt;のパッケージが存在しない場合がある。&lt;/li&gt;
&lt;li&gt;機能の一部が正常に動作しない場合がある。（&lt;code class=&quot;language-text&quot;&gt;github.copilot.suggest.terminal.command&lt;/code&gt;など。）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また &lt;a href=&quot;https://github.com/microsoft/vscode&quot;&gt;Visual Studio Code&lt;/a&gt; 内の&lt;code class=&quot;language-text&quot;&gt;Extensions&lt;/code&gt;から管理する場合は素直に&lt;code class=&quot;language-text&quot;&gt;vscode&lt;/code&gt;（パッケージ）を利用した方が良いです。（同期は「&lt;code class=&quot;language-text&quot;&gt;Settings Sync&lt;/code&gt;」に任せるのが手かもしれません。）私の環境では以下の結果になりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;vscode&lt;/code&gt;: &lt;code class=&quot;language-text&quot;&gt;Extension&lt;/code&gt;をインストールでき、正常に動作する。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;vscode-with-Extensions&lt;/code&gt;: &lt;code class=&quot;language-text&quot;&gt;Extension&lt;/code&gt;をインストールできない。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;vscodium&lt;/code&gt;: &lt;code class=&quot;language-text&quot;&gt;Extension&lt;/code&gt;をインストールできるが、機能の一部が正常に動作しない。（またログイン状態を維持できないかも。）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まあ折角なのでユーザ空間に導入しましょう。最初のエラーを回避するには、&lt;code class=&quot;language-text&quot;&gt;flake.nix&lt;/code&gt;などに以下の宣言を加えます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;nix&quot;&gt;&lt;pre class=&quot;language-nix&quot;&gt;&lt;code class=&quot;language-nix&quot;&gt;nixpkgs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allowUnfree &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;参考: &lt;a href=&quot;https://github.com/nix-community/home-manager/issues/463&quot;&gt;How to use unfree software declaratively with nixos module? #463&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unfreeなパッケージが&lt;code class=&quot;language-text&quot;&gt;vscode&lt;/code&gt;だけの場合、ここは口惜しいポイント（デメリット）かと思います。しかしトレードオフだと考えるしかなさそうです。&lt;/p&gt;
&lt;p&gt;この残念な気持ちを少し緩和するために「Unfreeという目印」が欲しいところです。方法はいくつか考えられます。&lt;/p&gt;
&lt;p&gt;私の場合は&lt;code class=&quot;language-text&quot;&gt;vscode&lt;/code&gt;を宣言しているディレクトリの名称を&lt;code class=&quot;language-text&quot;&gt;unfree-vscode&lt;/code&gt;としました。&lt;code class=&quot;language-text&quot;&gt;unfree&lt;/code&gt;を先頭にしたのはソートを考慮してのことです。&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;vscode-extensions.github.copilot&lt;/code&gt;を宣言すれば&lt;code class=&quot;language-text&quot;&gt;Extensions&lt;/code&gt;に追加されますが、先の理由から実施しません。&lt;a href=&quot;https://github.com/microsoft/vscode&quot;&gt;Visual Studio Code&lt;/a&gt; を開いて「&lt;code class=&quot;language-text&quot;&gt;Sign in to GitHub&lt;/code&gt;」を押下します。&lt;/p&gt;
&lt;p&gt;ウェブブラウザに遷移して &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; の認証画面が表示されれば問題ありません。が、何の反応も無い（ウェブブラウザに遷移しない）パターンもあると思います。&lt;/p&gt;
&lt;p&gt;この問題は環境によって様々なため、可能性が高そうな解決策をご紹介します。デスクトップ環境に &lt;a href=&quot;https://www.freedesktop.org/wiki/&quot;&gt;Freedesktop.org&lt;/a&gt; が絡んでいる場合「&lt;code class=&quot;language-text&quot;&gt;xdg&lt;/code&gt;」が関係している可能性が高いです。&lt;/p&gt;
&lt;p&gt;というのも &lt;a href=&quot;https://github.com/microsoft/vscode&quot;&gt;Visual Studio Code&lt;/a&gt; は &lt;a href=&quot;https://www.freedesktop.org/wiki/&quot;&gt;Freedesktop.org&lt;/a&gt; による &lt;a href=&quot;https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;XDG Base Directory&lt;/a&gt; に沿っているようです。したがって &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/xdg-utils/&quot;&gt;xdg-utils&lt;/a&gt; によって解決されるという道理です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考: &lt;a href=&quot;https://github.com/Microsoft/vscode/issues/3884&quot;&gt;Revisit VS Code folder structure for app data, settings, extensions #3884&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;xdg-utils&lt;/code&gt;を導入し「デフォルトのブラウザ」を表示してみます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ xdg-settings get default-web-browser
chromium-browser.desktop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正しく表示されない場合、ウェブブラウザから設定しますが、コマンドも用意されています。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ xdg-settings &lt;span class=&quot;token builtin class-name&quot;&gt;set&lt;/span&gt; default-web-browser brave-browser.desktop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考: &lt;a href=&quot;https://ja.linux-console.net/?p=10194&quot;&gt;Linuxでブラウザ環境変数を設定する方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;「なぜ &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/new/&quot;&gt;Firefox&lt;/a&gt;（&lt;code class=&quot;language-text&quot;&gt;firefox.desktop&lt;/code&gt;）を例に出さないのか」と思われたかもしれません。どうやら &lt;a href=&quot;https://github.com/microsoft/vscode&quot;&gt;Visual Studio Code&lt;/a&gt; は &lt;a href=&quot;https://www.chromium.org/Home/&quot;&gt;Chromium&lt;/a&gt; の &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/lkgr/components/os_crypt/&quot;&gt;OS Crypt&lt;/a&gt;（モジュール）を使っているからだそうです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考: &lt;a href=&quot;https://code.visualstudio.com/docs/editor/settings-sync#_linux&quot;&gt;Settings Sync#Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これで「&lt;code class=&quot;language-text&quot;&gt;Sign in to GitHub&lt;/code&gt;」からウェブブラウザ（&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; の認証画面）に遷移できるようになったかと思います。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; へログイン後、&lt;a href=&quot;https://github.com/microsoft/vscode&quot;&gt;Visual Studio Code&lt;/a&gt; に戻るとエラーが出るかもしれません。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;An OS keyring couldn&apos;t be identified for storing the
encryption related data in your current desktop
environment.

Open the troubleshooting guide to address this or you can use weaker
encryption that doesn&apos;t use the OS keyring.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;キーリング（例: &lt;a href=&quot;https://wiki.gnome.org/Projects/GnomeKeyring&quot;&gt;GNOME Keyring&lt;/a&gt;）が機能していないからのようです。以下がヒントになると思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/vscode/issues/187338&quot;&gt;Linux: An OS keyring couldn&apos;t be identified for storing the encryption related data in your current desktop environment #187338&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/docs/editor/settings-sync#_troubleshooting-keychain-issues&quot;&gt;Settings Sync#Troubleshooting keychain issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/docs/editor/settings-sync#_recommended-configure-the-keyring-to-use-with-vs-code&quot;&gt;Settings Sync#(recommended) Configure the keyring to use with VS Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;キーリング周りをスタートラインから詳解すると大変なことになりますので簡単（詳細な設定内容は省略）に。ミニマルな例として &lt;a href=&quot;https://www.passwordstore.org/&quot;&gt;pass&lt;/a&gt;（&lt;code class=&quot;language-text&quot;&gt;password-store&lt;/code&gt;）および &lt;a href=&quot;https://wiki.gnome.org/Projects/Libsecret&quot;&gt;libsecret&lt;/a&gt;（&lt;code class=&quot;language-text&quot;&gt;pass-secret-service&lt;/code&gt;）を有効にし、&lt;code class=&quot;language-text&quot;&gt;~/.vscode/argv.json&lt;/code&gt;（&lt;a href=&quot;https://vscodium.com/&quot;&gt;VSCodium&lt;/a&gt; の場合は&lt;code class=&quot;language-text&quot;&gt;~/.vscode-oss/argv.json&lt;/code&gt;）に&lt;code class=&quot;language-text&quot;&gt;&quot;password-store&quot;: &quot;gnome&quot;&lt;/code&gt;（&lt;code class=&quot;language-text&quot;&gt;code --password-store=&quot;gnome&quot;&lt;/code&gt;の永続化）を加えると良さそうです。&lt;code class=&quot;language-text&quot;&gt;argv.json&lt;/code&gt;への適用は以下が参考になると思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/vscode/issues/187338#issuecomment-1714813468&quot;&gt;Linux: An OS keyring couldn&apos;t be identified for storing the encryption related data in your current desktop environment #187338#issuecomment-1714813468&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「&lt;code class=&quot;language-text&quot;&gt;Use weaker encryption&lt;/code&gt;」で先に進むことはできますが「キーリングが使えていない状態」ということに留意しておく必要があります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/features/copilot&quot;&gt;GitHub Copilot&lt;/a&gt; のアクセス権が無い場合はエラーが出ます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;No access to GitHub Copilot found. You are currently logged in as &amp;lt;username&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これは「&lt;code class=&quot;language-text&quot;&gt;Signup for GitHub Copilot&lt;/code&gt;」から画面（ウェブブラウザ）の案内に従えば &lt;a href=&quot;https://github.com/features/copilot&quot;&gt;GitHub Copilot&lt;/a&gt; のアクセス権を取得できると思います。それでも失敗する場合は再ログインで解消するかもしれません。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考: &lt;a href=&quot;https://github.com/orgs/community/discussions/28455&quot;&gt;Your GitHub token is invalid. Please sign out from your GitHub account using VSCode UI and try again. #28455&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;お疲れ様でした。これでようやく「イマドキ」に到達ですね。&lt;/p&gt;
&lt;p&gt;ちょっと試すだけのつもりが、なんだか長旅になってしまいました。しばらく動かしてみて、フリートライアル終了後の対応を考えたいと思います。&lt;/p&gt;
&lt;p&gt;ということで、よっこらしょっと。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github/copilot.vim&quot;&gt;Copilot.vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[20231118]]></title><description><![CDATA[こんにちは。ここ最近 セブン‐イレブン で話題沸騰中の ブラジルプリン を買いました。 口コミでは「とにかくおいしい」と絶賛の嵐。どんなものかと期待と不安を胸にお口へIN。 ・・・っと、ここから先は書きにくいですね。 さて本題。 CatNose…]]></description><link>https://ghsable.github.io/sunatter/20231118/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20231118/</guid><pubDate>Sat, 18 Nov 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;こんにちは。ここ最近 &lt;a href=&quot;https://www.sej.co.jp/&quot;&gt;セブン‐イレブン&lt;/a&gt; で話題沸騰中の &lt;a href=&quot;https://www.sej.co.jp/products/a/item/111493/&quot;&gt;ブラジルプリン&lt;/a&gt; を買いました。&lt;/p&gt;
&lt;p&gt;口コミでは「とにかくおいしい」と絶賛の嵐。どんなものかと期待と不安を胸にお口へIN。&lt;/p&gt;
&lt;p&gt;・・・っと、ここから先は書きにくいですね。&lt;/p&gt;
&lt;p&gt;さて本題。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://catnose.me/&quot;&gt;CatNose&lt;/a&gt; さんより「&lt;a href=&quot;https://sizu.me/&quot;&gt;しずかなインターネット&lt;/a&gt;」というサービスが公開されました。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;しずかなインターネットは、日記やエッセイを書くのにちょうどいい、文
章書き散らしサービスです。

ここでは有益な情報を書くことはあまり求められていません。「たくさん
の人に読まれなくていい」「自分のために、ひょっとすると、どこかの誰
かのために」そんな気楽さで文章を書くための場所です。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://sizu.me/about&quot;&gt;about&lt;/a&gt;（このサービスについて）より。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;しずかなインターネットは、日記やエッセイを書くのにちょうどいい文章投
稿サービスです。

ここは、Twitterやnoteのような賑やかな広場ではありません。ここは、あ
なたのパーソナルな部屋のようなものです。部屋に文章を置き、通りかかっ
た人が部屋に入って自由に読むことができる… そんなコンセプトで作られま
した。

ここでは、頑張って有益なことを書くことは求められていません。個人的な
メモや日記を気楽に書き散らしましょう。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;着眼点が素敵ですね。「便利だが騒がしい都会」から「不便だが静かな田舎」へ向かうような感覚でしょうか。&lt;/p&gt;
&lt;p&gt;サービス開始の背景が投稿されていました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sizu.me/catnose/posts/tcm8kewsw4f6&quot;&gt;有益なことはAIに書かせよう｜catnose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以前、&lt;a href=&quot;https://ghsable.github.io/sunalog/&quot;&gt;sunalog&lt;/a&gt;（私のブログ）の方で「&lt;a href=&quot;https://ghsable.github.io/sunalog/post/2023-02-02-%E4%BA%BA%E9%96%93%E3%81%AB%E6%AE%8B%E3%81%95%E3%82%8C%E3%81%9F%E9%81%93%E3%81%AF%E9%9D%9E%E5%90%88%E7%90%86%E6%80%A7%E3%81%AE%E8%BF%BD%E6%B1%82%E3%81%8B%E3%82%82%E3%81%97%E3%82%8C%E3%81%AA%E3%81%84/&quot;&gt;人間に残された道は非合理性の追求かもしれない&lt;/a&gt;」というエッセイを書きました。なんだか似通うものがあり、勝手に嬉しくなりました。&lt;/p&gt;
&lt;p&gt;合理性（有益）というのも目的や背景によって捉え方が変わり、ヒトによっては寧ろ「駄文」の方が合理に寄与する場合もあるのかもしれません。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/sunatter/20231118&quot;&gt;本記事&lt;/a&gt; を執筆できた点において、私にとっては「&lt;code class=&quot;language-text&quot;&gt;ありがたい駄文&lt;/code&gt;」です。&lt;/p&gt;
&lt;p&gt;さてサービスを使い始めたいところですが、今のところ使いません。私にとって既に &lt;a href=&quot;/sunatter/&quot;&gt;ココ&lt;/a&gt; が「&lt;a href=&quot;https://sizu.me/&quot;&gt;しずかなインターネット&lt;/a&gt;」だからですね。&lt;/p&gt;
&lt;p&gt;そんなわけで今後もこの暗がりで、気兼ねなく「駄文」を続けていこうと思います。&lt;/p&gt;
&lt;p&gt;P.S.　&lt;a href=&quot;https://zenn.dev/&quot;&gt;Zenn&lt;/a&gt; のアカウントを作り直したため「&lt;a href=&quot;https://zenn.dev/dativus/articles/525840c717814e&quot;&gt;xmonad上におけるxdotoolのWindow操作でエラーが発生する場合の解決方法&lt;/a&gt;」の&lt;code class=&quot;language-text&quot;&gt;Like&lt;/code&gt;が消失してしまいました。折角いただいたのにも関わらず大変申し訳ございません。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[20231111]]></title><description><![CDATA[しばらく先の私に向けた戦記を残しておきます。NixOS で Immersed を完動させることが最終目的です。（NixOS 以外のユーザが読まれてもあまり意味が無いかもしれません。） Immersed のLinux版（例: ）を実行するには、（AppImage…]]></description><link>https://ghsable.github.io/sunatter/20231111/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20231111/</guid><pubDate>Sat, 11 Nov 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;しばらく先の私に向けた戦記を残しておきます。&lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; で &lt;a href=&quot;https://immersed.com/&quot;&gt;Immersed&lt;/a&gt; を完動させることが最終目的です。（&lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; 以外のユーザが読まれてもあまり意味が無いかもしれません。）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://immersed.com/&quot;&gt;Immersed&lt;/a&gt; のLinux版（例: &lt;code class=&quot;language-text&quot;&gt;Immersed-x86_64.AppImage&lt;/code&gt;）を実行するには、&lt;code class=&quot;language-text&quot;&gt;appimage-run&lt;/code&gt;（&lt;a href=&quot;https://appimage.org/&quot;&gt;AppImage&lt;/a&gt; を実行）が要ります。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ nix-shell &lt;span class=&quot;token parameter variable&quot;&gt;-p&lt;/span&gt; appimage-run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;取得した &lt;a href=&quot;https://appimage.org/&quot;&gt;AppImage&lt;/a&gt; にユーザの実行権限を付与します。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;--verbose&lt;/span&gt; u+x Immersed-x86_64.AppImag
mode of &lt;span class=&quot;token string&quot;&gt;&apos;Immersed-x86_64.AppImage&apos;&lt;/span&gt; changed from 0644 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rw-r--r--&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; to 0744 &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rwxr--r--&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実行するとエラー（&lt;code class=&quot;language-text&quot;&gt;libthai.so.0&lt;/code&gt;が見つからない）が出ると思います。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ appimage-run Immersed-x86_64.AppImage
Immersed: error &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; loading shared libraries: libthai.so.0: cannot &lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt; shared object file: No such &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt; or directory&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;そのため、環境変数「&lt;code class=&quot;language-text&quot;&gt;LD_LIBRARY_PATH&lt;/code&gt;」に&lt;code class=&quot;language-text&quot;&gt;libthai.so.0&lt;/code&gt;（&lt;a href=&quot;https://linux.thai.net/projects/libthai/&quot;&gt;libthai Library&lt;/a&gt;）のあるパスを通します。（以下、バージョンは読み替えてください。）&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/nix/store/hashcode-libthai-0.1.29/lib&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;リラン。先ほどのエラーは解消されましたが、新たなエラー（&lt;code class=&quot;language-text&quot;&gt;GLIBC_2.38&lt;/code&gt;が見つからない）が出ると思います。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ appimage-run Immersed-x86_64.AppImage
ps: /usr/lib/libc.so.6: version &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;GLIBC_2.38&apos; not found &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;required by &lt;span class=&quot;token function&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
ps: /usr/lib/libc.so.6: version &lt;span class=&quot;token variable&quot;&gt;`&lt;/span&gt;&lt;/span&gt;GLIBC_2.38&apos; not found &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;required by /nix/store/hashcode-procps-3.3.17/lib/libprocps.so.8&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gnu.org/software/libc/&quot;&gt;glibc&lt;/a&gt; のバージョン&lt;code class=&quot;language-text&quot;&gt;2.38&lt;/code&gt;が見つからないようです。現時点においてnix packagesのstable版（&lt;code class=&quot;language-text&quot;&gt;23.05&lt;/code&gt;）は「Version: &lt;code class=&quot;language-text&quot;&gt;2.37-45&lt;/code&gt;」に対し、unstable版は「Version: &lt;code class=&quot;language-text&quot;&gt;2.38-23&lt;/code&gt;」です。&lt;/p&gt;
&lt;p&gt;ということで&lt;code class=&quot;language-text&quot;&gt;channel&lt;/code&gt;を&lt;code class=&quot;language-text&quot;&gt;nixpkgs-unstable&lt;/code&gt;に向ければ良さそうです。&lt;code class=&quot;language-text&quot;&gt;pkgs.glibc&lt;/code&gt;を宣言したいところですが、実は &lt;a href=&quot;https://nixos.org/manual/nix/stable/command-ref/nix-shell&quot;&gt;nix-shell&lt;/a&gt; で&lt;code class=&quot;language-text&quot;&gt;channel:nixpkgs-unstable&lt;/code&gt;の環境に入れば&lt;code class=&quot;language-text&quot;&gt;pkgs.glibc&lt;/code&gt;の宣言は不要になります。（デフォルトの環境に含まれている様子。）&lt;/p&gt;
&lt;p&gt;したがって、このエラーは&lt;code class=&quot;language-text&quot;&gt;shell.nix&lt;/code&gt;（&lt;a href=&quot;https://nixos.org/manual/nix/stable/command-ref/nix-shell&quot;&gt;nix-shell&lt;/a&gt;）を経由することで解決します。であれば、初回のエラーをもう少しスマートに解消（組込）してみます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;nix&quot;&gt;&lt;pre class=&quot;language-nix&quot;&gt;&lt;code class=&quot;language-nix&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# pkgs.appimage-runの宣言を忘れずに。&lt;/span&gt;

shellHook &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;
  export LD_LIBRARY_PATH=&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token antiquotation important&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;pkgs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;libthai&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;/lib
&apos;&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでめでたく &lt;a href=&quot;https://immersed.com/&quot;&gt;Immersed&lt;/a&gt; のウィンドウ（GUI）を起動できると思います。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ appimage-run Immersed-x86_64.AppImage
Immersed-x86_64.AppImage installed &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; /home/username/.cache/appimage-run/hashcode&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あとは画面の案内通りに接続先情報を入力すれば、接続先側にコンピュータがホスト名で追加されると思います。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.x.org/releases/current/doc/man/man7/X.7.xhtml&quot;&gt;X11&lt;/a&gt; ユーザは恐らくこれで完了かと思います。お疲れ様でした。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wayland.freedesktop.org/index.html&quot;&gt;Wayland&lt;/a&gt; ユーザは居残りです。不穏なメッセージが表示されたかと思います。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Wayland Window System is detected. Currently we only support
X11. Please consider to use X Window System for now.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;結論、&lt;a href=&quot;https://immersed.com/&quot;&gt;Immersed&lt;/a&gt; は &lt;a href=&quot;https://wayland.freedesktop.org/index.html&quot;&gt;Wayland&lt;/a&gt; に対応していません！（ﾄﾞﾝ!!）&lt;/p&gt;
&lt;p&gt;コンポジタで &lt;a href=&quot;https://wayland.freedesktop.org/xserver.html&quot;&gt;Xwayland&lt;/a&gt;（&lt;code class=&quot;language-text&quot;&gt;pkgs.xwayland&lt;/code&gt;の宣言は不要）を有効（例: &lt;code class=&quot;language-text&quot;&gt;disable&lt;/code&gt;を解除）にし、&lt;a href=&quot;https://manpages.org/xwininfo&quot;&gt;xwininfo&lt;/a&gt;（&lt;code class=&quot;language-text&quot;&gt;xorg.xwininfo&lt;/code&gt;）を起動してから &lt;a href=&quot;https://immersed.com/&quot;&gt;Immersed&lt;/a&gt; のウィンドウをマウスホバーしてみます。するとマウスポインタが「＋」に変化したと思います。&lt;/p&gt;
&lt;p&gt;その意味は &lt;a href=&quot;https://wayland.freedesktop.org/xserver.html&quot;&gt;Xwayland&lt;/a&gt; 経由で（期待通りに）起動されているということになります（泣）残念ながらチェックメイトです。&lt;/p&gt;
&lt;p&gt;ちなみに &lt;a href=&quot;https://www.winehq.org/&quot;&gt;Wine&lt;/a&gt;（&lt;code class=&quot;language-text&quot;&gt;wineWowPackages.waylandFull&lt;/code&gt;）+ &lt;a href=&quot;https://wiki.winehq.org/Winetricks&quot;&gt;Winetricks&lt;/a&gt;（&lt;code class=&quot;language-text&quot;&gt;winetricks&lt;/code&gt;）では、アプリケーションの実行段階から雲行きが怪しい雰囲気です。よく忘れてしまうので、ついでに頻出のコマンドを控えておきます。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# .exe形式の実行&lt;/span&gt;
$ wine プログラム名.exe

&lt;span class=&quot;token comment&quot;&gt;# .msi形式の実行&lt;/span&gt;
$ wine msiexec /i プログラム名.msi

&lt;span class=&quot;token comment&quot;&gt;# Wine本体の設定（Windowsのバージョンなど）&lt;/span&gt;
$ winecfg

&lt;span class=&quot;token comment&quot;&gt;# Wineからインストールしたアプリケーション（~/.wine/drive_c/）をアンインストール&lt;/span&gt;
$ wine uninstaller&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一筋の光が公式より「&lt;a href=&quot;https://wayland.freedesktop.org/index.html&quot;&gt;Wayland&lt;/a&gt; は将来的にサポート予定」とのことです。いつになるのか分かりませんが、そのときが来たらこの続きから着手しようかなと思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://immersed.zendesk.com/hc/en-us/articles/14226089686157-Supported-Computers-Headsets&quot;&gt;Supported Computers &amp;#x26; Headsets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[20231108]]></title><description><![CDATA[こんにちは。サイト名を「sunainfo」から「sunatter」に変更いたしました。 記事を見返した際に「サイト名と内容が一致していない」と判断されたためです。 改めてよろしくお願いします。]]></description><link>https://ghsable.github.io/sunatter/20231108/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20231108/</guid><pubDate>Wed, 08 Nov 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;こんにちは。サイト名を「sunainfo」から「&lt;a href=&quot;/sunatter/&quot;&gt;sunatter&lt;/a&gt;」に変更いたしました。&lt;/p&gt;
&lt;p&gt;記事を見返した際に「サイト名と内容が一致していない」と判断されたためです。&lt;/p&gt;
&lt;p&gt;改めてよろしくお願いします。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[20231107]]></title><description><![CDATA[こんにちは。Rakuten Web Service の API…]]></description><link>https://ghsable.github.io/sunatter/20231107/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20231107/</guid><pubDate>Tue, 07 Nov 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;こんにちは。&lt;a href=&quot;https://webservice.rakuten.co.jp/&quot;&gt;Rakuten Web Service&lt;/a&gt; の &lt;a href=&quot;https://webservice.rakuten.co.jp/documentation&quot;&gt;API一覧&lt;/a&gt; を眺めていて少し気になりました。（巷で話題のネタです。）&lt;/p&gt;
&lt;p&gt;エンドポイントの共通部分「&lt;code class=&quot;language-text&quot;&gt;https://app.rakuten.co.jp/services/api&lt;/code&gt;」が少し冗長に見えます。なぜなら同じような意味のワード（&lt;code class=&quot;language-text&quot;&gt;app&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;services&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;api&lt;/code&gt;）が並んでいるからです。&lt;/p&gt;
&lt;p&gt;仮にこれらのワードによって内部処理を分けていたとしても「APIを利用する側」からはあまり関係がありません。ホスト名で表現できるのであれば、エンドポイントはなるべく短くした方が良い気がします。&lt;/p&gt;
&lt;p&gt;つまりこう「&lt;code class=&quot;language-text&quot;&gt;https://api.rakuten.co.jp&lt;/code&gt;」です。更にバージョン（例: &lt;code class=&quot;language-text&quot;&gt;/v1&lt;/code&gt;）を付与するのも良さそうです。&lt;/p&gt;
&lt;p&gt;日本を代表する企業でもあるので、あえてこうしているのだとしたら理由をこっそり知りたいところです。はて、どんなもんなんでしょう。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[20231106]]></title><description><![CDATA[思い出したように。しばらく前に「Nexus 7 (2013)」が壊れてしまいました。 ご存知無い方向けに、これは Google と ASUS が共同開発したタブレット型コンピュータです。（もう1…]]></description><link>https://ghsable.github.io/sunatter/20231106/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20231106/</guid><pubDate>Mon, 06 Nov 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;思い出したように。しばらく前に「Nexus 7 (2013)」が壊れてしまいました。&lt;/p&gt;
&lt;p&gt;ご存知無い方向けに、これは &lt;a href=&quot;https://about.google/intl/ALL_en/&quot;&gt;Google&lt;/a&gt; と &lt;a href=&quot;https://www.asus.com/&quot;&gt;ASUS&lt;/a&gt; が共同開発したタブレット型コンピュータです。（もう10年前ですか・・。）&lt;/p&gt;
&lt;p&gt;当時は程良いサイズ・性能と値段で評判も良かったような記憶があります。現在では「iPad」が強くなり過ぎてしまいましたね。&lt;/p&gt;
&lt;p&gt;原因はタッチパネル不良のようで、画面下部あたりを永遠に高速連打される「嫌がらせみたいな症状」でした。次第に電源も入りにくくなってしまい、御臨終です。&lt;/p&gt;
&lt;p&gt;手持ちの当時物で壊れたのはこれが唯一となりました。実は同時期頃の「iPad」類は存命です。&lt;/p&gt;
&lt;p&gt;手持ちからの判断にはなりますが、品質の面では &lt;a href=&quot;https://www.apple.com/&quot;&gt;Apple&lt;/a&gt; 製品に分がありそうな結果となりました。気がつけば &lt;a href=&quot;https://www.android.com/&quot;&gt;Android&lt;/a&gt; 機が手持ちから一切無くなってしまいました。&lt;/p&gt;
&lt;p&gt;今後購入するかどうかですが、手持ちの「iPad」類にあまり文句が無いので、もしかしたらこれが最初で最後の &lt;a href=&quot;https://www.android.com/&quot;&gt;Android&lt;/a&gt; 機になるかもしれません。&lt;/p&gt;
&lt;p&gt;どうしても &lt;a href=&quot;https://www.android.com/&quot;&gt;Android&lt;/a&gt; 環境が必要になった際は「仮想環境でいいかも」という気持ちになっています。今のところそのような場面はあまり思いつきませんけどね（笑）&lt;/p&gt;</content:encoded></item><item><title><![CDATA[20231103]]></title><description><![CDATA[こんにちは。タイトルを「年月日」に統一してみました。 ブログらしさを極力排除しておきたかったためです。この変更によって青鳥の代替として機能するのではないかと期待しています。 引き続きブログ未満という路線を歩んでゆく所存です。]]></description><link>https://ghsable.github.io/sunatter/20231103/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20231103/</guid><pubDate>Fri, 03 Nov 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;こんにちは。タイトルを「年月日」に統一してみました。&lt;/p&gt;
&lt;p&gt;ブログらしさを極力排除しておきたかったためです。この変更によって青鳥の代替として機能するのではないかと期待しています。&lt;/p&gt;
&lt;p&gt;引き続きブログ未満という路線を歩んでゆく所存です。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[20230528]]></title><description><![CDATA[こんにちは。青鳥から移転いたしました。 今後はこちらから「sunalog」（私のブログ）未満（つぶやき）を投稿していく予定です。サイト名の通り「お知らせ」のような軽い立ち位置となります。 どうぞよろしくお願いいたします。]]></description><link>https://ghsable.github.io/sunatter/20230528/</link><guid isPermaLink="false">https://ghsable.github.io/sunatter/20230528/</guid><pubDate>Sun, 28 May 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;こんにちは。青鳥から移転いたしました。&lt;/p&gt;
&lt;p&gt;今後はこちらから「&lt;a href=&quot;https://ghsable.github.io/sunalog/&quot;&gt;sunalog&lt;/a&gt;」（私のブログ）未満（つぶやき）を投稿していく予定です。サイト名の通り「お知らせ」のような軽い立ち位置となります。&lt;/p&gt;
&lt;p&gt;どうぞよろしくお願いいたします。&lt;/p&gt;</content:encoded></item></channel></rss>